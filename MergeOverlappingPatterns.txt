import java.util.*;
class Interval
{
    int start;
    int end;
    
    public Interval(int start,int end)
    {
        this.start = start;
        this.end = end;
    }
}
class MergeOverlappingPatterns
{
    public  void mergePattern(Interval interval[])
    {
        int index=0,i=1;
        Arrays.sort(interval,new Comparator<Interval>(){
         public int compare(Interval interval1,Interval interval2)  { 
           return interval1.start - interval2.start; 
        }});
        
        
        for(i=1;i<interval.length;i++)
        {
            //System.out.println(interval[i].start+ " "+interval[index].end);
            if(interval[i].start <= interval[index].end)
            {
                interval[index].start = Math.min(interval[index].start,interval[i].start);
                interval[index].end = Math.max(interval[index].end,interval[i].end);
                
            }
            else{
             
                interval[index] = interval[i];
                 index++;
                
        }
        }
        
        for(i=0;i<=index;i++)
        System.out.println(interval[index].start+" " + interval[index].end);
    }
    
    
}



public class MyClass {
    public static void main(String args[]) {
     Interval interval[] = new Interval[5];
     interval[0] = new Interval(1,5);
     interval[1] = new Interval(4,7);
     interval[2]=new  Interval(6,8);
     interval[3] = new Interval(9,10);
     interval[4] = new Interval(10,18);
     interval[4] = new Interval(12,20);
     MergeOverlappingPatterns patterns = new MergeOverlappingPatterns();
    
     patterns.mergePattern(interval);
     
     
    }
}